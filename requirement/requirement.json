{
    "valid_search": {
        "wardes_profile": [
            {
                "functions": [
                    "GetListWardesProfile"
                ],
                "attributes": [
                    {
                        "field": "code",
                        "type": "char",
                        "operator": "lk, eq, in",
                        "description": "The code of the wardes profile"
                    },
                    {
                        "field": "name",
                        "type": "char",
                        "operator": "lk, eq, in",
                        "description": "The name of the wardes profile"
                    }
                ]
            }
        ],
        "wardes_profile_image": [],
        "person_profile": [],
        "user": [
            {
                "functions": [
                    "GetListUser"
                ],
                "attributes": [
                    {
                        "field": "id",
                        "type": "number",
                        "operator": "eq, in",
                        "description": "The unique identifier for the user"
                    },
                    {
                        "field": "username",
                        "type": "char",
                        "operator": "lk, eq, in",
                        "description": "The username of the user"
                    },
                    {
                        "field": "email",
                        "type": "char",
                        "operator": "lk, eq, in",
                        "description": "The email address of the user"
                    },
                    {
                        "field": "created_at",
                        "type": "date",
                        "operator": "rng",
                        "description": "The date the user was created"
                    }
                ]
            }
        ]
    },
    "repository": {
        "wardes_profile": [
            {
                "name": "WardesProfileModel",
                "description": "same as wardes_profile table in database"
            }
        ],
        "wardes_profile_image": [
            {
                "name": "WardesProfileImageModel",
                "description": "same attribute with the wardes_profile_image table on database"
            }
        ],
        "person_profile": [
            {
                "name": "PersonProfileModel",
                "description": "same as person_profile table in database"
            }
        ],
        "user": [
            {
                "name": "UserModel",
                "description": "same as user table in database"
            }
        ]
    },
    "dao": {
        "wardes_profile": {
            "db": "postgresql",
            "functions": [
                {
                    "name": "InsertWardesProfile",
                    "param": "context, tx, repository.WardesProfileModel",
                    "table": "wardes_profile",
                    "return": "repository.WardesProfileModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function will insert a new record into the wardes_profile table."
                },
                {
                    "name": "GetListWardesProfile",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "wardes_profile wp, nexchief_account na, user u",
                    "return": "[]interface{}, error",
                    "attribute": [
                        "na.id",
                        "na.code",
                        "wp.id",
                        "wp.code",
                        "wp.username",
                        "wp.phone",
                        "wp.email",
                        "u.id",
                        "u.username"
                    ],
                    "description": "Retrieves a list of wardes profiles"
                },
                {
                    "name": "GetWardesProfile",
                    "param": "context, string",
                    "table": "wardes_profile",
                    "return": "repository.WardesProfileModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function will retrieve the details of a wardes_profile by its ID."
                },
                {
                    "name": "UpdateWardesProfile",
                    "param": "context, tx, repository.WardesProfileModel",
                    "table": "wardes_profile",
                    "return": "error",
                    "attribute": [
                        "name",
                        "phone",
                        "email"
                    ],
                    "description": "Update the details of a wardes_profile."
                },
                {
                    "name": "CountWardesProfile",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "wardes_profile wp, user u",
                    "return": "int, error",
                    "attribute": [],
                    "description": "This function counts the total number of wardes_profile records."
                },
                {
                    "name": "DeleteWardesProfile",
                    "param": "context, tx, repository.WardesProfileModel",
                    "table": "wardes_profile",
                    "return": "error",
                    "attribute": [
                        "id"
                    ],
                    "description": "This function deletes a wardes profile by its ID."
                },
                {
                    "name": "GetWardesProfileByCode",
                    "param": "context, string",
                    "table": "wardes_profile",
                    "return": "repository.WardesProfileModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Fetches a wardes profile by its unique code."
                }
            ]
        },
        "wardes_profile_image": {
            "functions": [
                {
                    "name": "InsertWardesProfileImage",
                    "param": "context, tx, repository.WardesProfileImageModel",
                    "table": "wardes_profile_image",
                    "return": "repository.WardesProfileImageModel, error",
                    "attribute": [],
                    "description": "This function will insert a new wardes profile image into the database."
                },
                {
                    "name": "GetWardesProfileImageByUserID",
                    "param": "context, int64",
                    "table": "wardes_profile_image",
                    "return": "repository.WardesProfileImageModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Retrieves the profile image details for a specific user ID."
                },
                {
                    "name": "CountWardesProfileImage",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "wardes_profile_image wpi, wardes_profile wp",
                    "return": "int, error",
                    "attribute": [
                        "not specified yet"
                    ],
                    "description": "Counts the number of records in the wardes_profile_image table"
                },
                {
                    "name": "UpdateWardesProfileImage",
                    "param": "context, tx, repository.WardesProfileImageModel",
                    "table": "wardes_profile_image",
                    "return": "error",
                    "attribute": [
                        "path_image"
                    ],
                    "description": "Update the existing wardes profile image record."
                }
            ],
            "db": "postgresql"
        },
        "person_profile": {
            "functions": [
                {
                    "name": "InsertPersonProfile",
                    "param": "context, tx, repository.PersonProfileModel",
                    "table": "person_profile",
                    "return": "repository.PersonProfileModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function will insert a new record into the person_profile table."
                },
                {
                    "name": "GetPersonProfileByUserID",
                    "param": "context, int64",
                    "table": "person_profile pp, wardes_profile wp",
                    "return": "repository.PersonProfileModel, error",
                    "attribute": [
                        "pp.id",
                        "pp.first_name",
                        "pp.last_name",
                        "wp.id",
                        "wp.name",
                        "wp.username",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function retrieves the details of a person profile by user id."
                }
            ],
            "db": "postgresql"
        },
        "user": {
            "functions": [
                {
                    "name": "InsertUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "repository.UserModel, error",
                    "attribute": [
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function will insert a new user into the database."
                },
                {
                    "name": "UpdateUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "error",
                    "attribute": [
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "This function will update an existing user in the database."
                },
                {
                    "name": "DeleteUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "error",
                    "attribute": [
                        "id"
                    ],
                    "description": "This function will delete a user from the database."
                },
                {
                    "name": "GetUser",
                    "param": "context, string",
                    "table": "user",
                    "return": "error",
                    "attribute": [
                        "uuid_key",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_client",
                        "updated_at"
                    ],
                    "description": "This function will retrieve a user from the database based on a given ID."
                },
                {
                    "name": "GetListUser",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "user",
                    "return": "[]interface{}, error",
                    "attribute": [
                        "uuid_key",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_client",
                        "updated_at"
                    ],
                    "description": "This function will retrieve a list of users from the database based on given parameters."
                },
                {
                    "name": "CountListUser",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "user",
                    "return": "int, error",
                    "attribute": [
                        "count(id)"
                    ],
                    "description": "This function will count the number of users in the database based on given parameters."
                }
            ],
            "db": "postgresql"
        }
    }
}