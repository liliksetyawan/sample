{
    "valid_search": {
        "wardes_profile": [],
        "wardes_profile_image": [],
        "person_profile": [
            {
                "functions": [
                    "GetListPersonProfile",
                    "CountListPersonProfile"
                ],
                "attributes": [
                    {
                        "field": "person_profile_id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Unique identifier for the person profile"
                    },
                    {
                        "field": "title_id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Identifier for the title"
                    },
                    {
                        "field": "title_name",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Name of the title"
                    },
                    {
                        "field": "first_name",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "First name of the person"
                    },
                    {
                        "field": "last_name",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Last name of the person"
                    },
                    {
                        "field": "sex",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Gender of the person"
                    },
                    {
                        "field": "nik",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "National identification number"
                    },
                    {
                        "field": "address_1",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Primary address of the person"
                    }
                ]
            }
        ],
        "user": [
            {
                "functions": [
                    "GetListUser",
                    "CountListUser"
                ],
                "attributes": [
                    {
                        "field": "id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Unique identifier for the user"
                    },
                    {
                        "field": "uuid_key",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "UUID key for the user"
                    },
                    {
                        "field": "auth_user_id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Authentication user ID"
                    },
                    {
                        "field": "person_profile_id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Person profile ID associated with the user"
                    },
                    {
                        "field": "client_id",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "Client ID associated with the user"
                    },
                    {
                        "field": "user_code",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "User code identifier"
                    },
                    {
                        "field": "username",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Username for login"
                    },
                    {
                        "field": "last_token",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Last authentication token used"
                    },
                    {
                        "field": "signature_key",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Signature key for security"
                    },
                    {
                        "field": "ip_whitelist",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "IP addresses allowed for access"
                    },
                    {
                        "field": "device",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Device information"
                    },
                    {
                        "field": "level",
                        "type": "number",
                        "operator": "equal, greater, less",
                        "description": "User access level"
                    },
                    {
                        "field": "locale",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "User locale setting"
                    },
                    {
                        "field": "additional_info",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Additional user information"
                    },
                    {
                        "field": "alias",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "User alias name"
                    },
                    {
                        "field": "is_user_nex_acc",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Flag indicating if user has NEX account access"
                    },
                    {
                        "field": "mobile_access",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Flag indicating mobile access permission"
                    },
                    {
                        "field": "website_access",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Flag indicating website access permission"
                    },
                    {
                        "field": "wdi_portal_access",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Flag indicating WDI portal access permission"
                    },
                    {
                        "field": "domain_nd6",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "ND6 domain information"
                    },
                    {
                        "field": "username_nd6",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "ND6 username"
                    },
                    {
                        "field": "password_nd6",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "ND6 password"
                    },
                    {
                        "field": "domain_nexvin",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "NEXVIN domain information"
                    },
                    {
                        "field": "username_nexvin",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "NEXVIN username"
                    },
                    {
                        "field": "password_nexvin",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "NEXVIN password"
                    },
                    {
                        "field": "created_by",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "User who created the record"
                    },
                    {
                        "field": "created_client",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Client that created the record"
                    },
                    {
                        "field": "created_at",
                        "type": "date",
                        "operator": "equal, greater, less",
                        "description": "Timestamp when record was created"
                    },
                    {
                        "field": "updated_by",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "User who last updated the record"
                    },
                    {
                        "field": "updated_at",
                        "type": "date",
                        "operator": "equal, greater, less",
                        "description": "Timestamp when record was last updated"
                    },
                    {
                        "field": "updated_client",
                        "type": "char",
                        "operator": "equal, like",
                        "description": "Client that last updated the record"
                    },
                    {
                        "field": "deleted",
                        "type": "enum",
                        "operator": "equal",
                        "description": "Flag indicating if record is deleted"
                    }
                ]
            }
        ],
        "parameter": []
    },
    "repository": {
        "wardes_profile": [
            {
                "name": "WardesProfileModel",
                "description": "same as wardes_profile table in database"
            }
        ],
        "wardes_profile_image": [
            {
                "name": "WardesProfileImageModel",
                "description": "same as wardes_profile_image table in database"
            }
        ],
        "person_profile": [
            {
                "name": "PersonProfileModel",
                "description": "same as person_profile table in database"
            }
        ],
        "user": [
            {
                "name": "UserModel",
                "description": "same as user table in database"
            }
        ],
        "parameter": [
            {
                "name": "ParameterModel",
                "description": "same as parameter table in database"
            }
        ]
    },
    "dao": {
        "wardes_profile": {
            "db": "postgresql",
            "functions": [
                {
                    "name": "InsertWardesProfile",
                    "param": "context, tx, repository.WardesProfileModel",
                    "table": "wardes_profile",
                    "return": "repository.WardesProfileModel, error",
                    "attribute": [
                        "user_id",
                        "username",
                        "nexchief_account_id",
                        "personal_name",
                        "gender",
                        "phone",
                        "email",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Insert new wardes profile data"
                }
            ]
        },
        "wardes_profile_image": {
            "functions": [
                {
                    "name": "InsertWardesProfileImage",
                    "param": "context, tx, repository.WardesProfileImageModel",
                    "table": "wardes_profile_image",
                    "return": "repository.WardesProfileImageModel, error",
                    "attribute": [
                        "nexchief_account_id",
                        "type",
                        "path_image",
                        "wardes_profile_id",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Insert a new wardes profile image record"
                }
            ],
            "db": "postgresql"
        },
        "person_profile": {
            "functions": [
                {
                    "name": "InsertPersonProfile",
                    "param": "context, tx, repository.PersonProfileModel",
                    "table": "person_profile",
                    "return": "repository.PersonProfileModel, error",
                    "attribute": [
                        "person_profile_id",
                        "title_id",
                        "title_name",
                        "first_name",
                        "last_name",
                        "sex",
                        "nik",
                        "address_1",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Insert a new person profile record"
                },
                {
                    "name": "UpdatePersonProfile",
                    "param": "context, tx, repository.PersonProfileModel",
                    "table": "person_profile",
                    "return": "error",
                    "attribute": [
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Update an existing person profile record"
                },
                {
                    "name": "DeletePersonProfile",
                    "param": "context, tx, repository.PersonProfileModel",
                    "table": "person_profile",
                    "return": "error",
                    "attribute": [
                        "id"
                    ],
                    "description": "Delete a person profile record"
                },
                {
                    "name": "GetPersonProfile",
                    "param": "context, string",
                    "table": "person_profile",
                    "return": "error",
                    "attribute": [
                        "uuid_key",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_client",
                        "updated_at"
                    ],
                    "description": "Get a single person profile record by ID"
                },
                {
                    "name": "GetListPersonProfile",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "person_profile",
                    "return": "[]interface{}, error",
                    "attribute": [
                        "uuid_key",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_client",
                        "updated_at"
                    ],
                    "description": "Get a list of person profile records with search and pagination"
                },
                {
                    "name": "CountListPersonProfile",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "person_profile",
                    "return": "int, error",
                    "attribute": [
                        "count(id)"
                    ],
                    "description": "Count the number of person profile records matching search criteria"
                }
            ],
            "db": "postgresql"
        },
        "user": {
            "functions": [
                {
                    "name": "InsertUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "repository.UserModel, error",
                    "attribute": [
                        "auth_user_id",
                        "person_profile_id",
                        "client_id",
                        "user_code",
                        "username",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Insert a new user record into the database"
                },
                {
                    "name": "GetUser",
                    "param": "context, string",
                    "table": "user",
                    "return": "repository.UserModel, error",
                    "attribute": [
                        "uuid_key",
                        "id",
                        "auth_user_id",
                        "person_profile_id",
                        "client_id",
                        "user_code",
                        "username",
                        "last_token",
                        "signature_key",
                        "ip_whitelist",
                        "device",
                        "level",
                        "locale",
                        "additional_info",
                        "alias",
                        "is_user_nex_acc",
                        "mobile_access",
                        "website_access",
                        "wdi_portal_access",
                        "domain_nd6",
                        "username_nd6",
                        "password_nd6",
                        "domain_nexvin",
                        "username_nexvin",
                        "password_nexvin",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_at",
                        "updated_client",
                        "deleted"
                    ],
                    "description": "Get a user by ID"
                },
                {
                    "name": "UpdateUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "error",
                    "attribute": [
                        "auth_user_id",
                        "person_profile_id",
                        "client_id",
                        "user_code",
                        "username",
                        "last_token",
                        "signature_key",
                        "ip_whitelist",
                        "device",
                        "level",
                        "locale",
                        "additional_info",
                        "alias",
                        "is_user_nex_acc",
                        "mobile_access",
                        "website_access",
                        "wdi_portal_access",
                        "domain_nd6",
                        "username_nd6",
                        "password_nd6",
                        "domain_nexvin",
                        "username_nexvin",
                        "password_nexvin",
                        "updated_by",
                        "updated_at",
                        "updated_client"
                    ],
                    "description": "Update an existing user record"
                },
                {
                    "name": "DeleteUser",
                    "param": "context, tx, repository.UserModel",
                    "table": "user",
                    "return": "error",
                    "attribute": [
                        "deleted"
                    ],
                    "description": "Soft delete a user record"
                },
                {
                    "name": "GetListUser",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "user",
                    "return": "[]interface{}, error",
                    "attribute": [
                        "uuid_key",
                        "id",
                        "auth_user_id",
                        "person_profile_id",
                        "client_id",
                        "user_code",
                        "username",
                        "last_token",
                        "signature_key",
                        "ip_whitelist",
                        "device",
                        "level",
                        "locale",
                        "additional_info",
                        "alias",
                        "is_user_nex_acc",
                        "mobile_access",
                        "website_access",
                        "wdi_portal_access",
                        "domain_nd6",
                        "username_nd6",
                        "password_nd6",
                        "domain_nexvin",
                        "username_nexvin",
                        "password_nexvin",
                        "created_by",
                        "created_client",
                        "created_at",
                        "updated_by",
                        "updated_at",
                        "updated_client",
                        "deleted"
                    ],
                    "description": "Get a list of users with pagination and search"
                },
                {
                    "name": "CountListUser",
                    "param": "context, in.GetListRequest, []model.SearchParam",
                    "table": "user",
                    "return": "int, error",
                    "attribute": [
                        "count(id)"
                    ],
                    "description": "Count the number of users matching search criteria"
                }
            ],
            "db": "postgresql"
        },
        "parameter": {
            "functions": [
                {
                    "name": "InsertParameter",
                    "param": "context, tx, repository.ParameterModel",
                    "table": "parameter",
                    "return": "repository.ParameterModel, error",
                    "attribute": [
                        "parameter_group_id",
                        "name",
                        "name_en",
                        "code",
                        "sequence",
                        "level",
                        "type",
                        "created_at",
                        "created_by",
                        "created_client",
                        "updated_at",
                        "updated_by",
                        "updated_client"
                    ],
                    "description": "Insert a new parameter record"
                }
            ],
            "db": "postgresql"
        }
    }
}