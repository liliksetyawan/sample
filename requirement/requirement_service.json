{
    "wardes_profile": {
        "features": [
            {
                "name": "InsertWardesProfile",
                "url": "/v1/wardes_profile",
                "menu": "insert",
                "permission": "master.wardes.wardes_profile:insert",
                "descriptions": "Insert a new wardes_profile record into the system.",
                "audit_enabled": true,
                "type": "default",
                "dto_in": "default",
                "dto_out": "WardesProfileDTOOut",
                "functionality": [
                    "Validate incoming DTO for required fields and proper formats; if invalid return validation error.",
                    "Map DTO to wardes_profile entity structure for insertion.",
                    "Call wardes_profileDAO.InsertWardesProfile(ctx, entityToInsert) to persist the new wardes_profile into table wardes_profile.",
                    "Map inserted entity/result to WardesProfileDTOOut and return success response.",
                    "Handle and return any DAO or internal errors with appropriate error codes/messages."
                ],
                "utility": {
                    "email": [
                        ""
                    ],
                    "azure": [
                        ""
                    ],
                    "api_connector": [
                        ""
                    ]
                }
            },
            {
                "name": "GetWardesProfileList",
                "url": "/v1/wardes_profile",
                "menu": "list",
                "permission": "master.wardes.wardes_profile:view",
                "descriptions": "Retrieve a list of wardes_profile records with summary fields for listing.",
                "audit_enabled": false,
                "type": "getlist",
                "dto_in": "default",
                "dto_out": "ListWardesProfileDTOOut",
                "functionality": [
                    "Parse and validate request DTO (List/filter/order/limit/pagination) from input",
                    "Build DAO query params (filters, order_by, limit, offset) based on DTO",
                    "Call wardes_profileDAO.GetListWardesProfile(ctx, queryParams)",
                    "Handle DAO errors and map to service-level errors",
                    "Transform DAO result set into ListWardesProfileDTOOut format",
                    "Return ListWardesProfileDTOOut with metadata (total, limit, offset)"
                ],
                "utility": {
                    "email": [
                        ""
                    ],
                    "azure": [
                        ""
                    ],
                    "api_connector": [
                        ""
                    ]
                }
            }
        ],
        "scope": [
            "read",
            "write"
        ],
        "order": [
            "id"
        ],
        "limit": [
            10,
            20,
            30,
            50,
            100
        ],
        "needs": [
            "audit_helper",
            "wardes_profileDAO",
            "bundles"
        ]
    }
}