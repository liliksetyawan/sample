```go 
***filename: wardes_profile/type.go
package wardes_profile

import (
	"github.com/nexsoft-git/nexcommon/context"
	"github.com/nexsoft-git/nexcommon/dto/in"
	"github.com/nexsoft-git/nexcommon/model"
	"github.com/nexsoft-git/nexcommon/services"
)

type WardesProfileService interface {
    
    InsertWardesProfile(
        ctx *context.ContextModel,
        param model.URLParam,
        dto interface{},
    ) (
        header map[string]string,
        output interface{},
        err error,
    )
    
    GetDTO() interface{}
    GetListScope() []string
    GetListValidLimit() []int
    GetListValidOrderBy() []string
    GetListValidSearch() []string
    GetDefaultOperator() services.DefaultOperators
    GetMultipartDTO() interface{}
}
***SPLIT**HERE***

***filename: wardes_profile/service.go
package wardes_profile

import (
    "github.com/nexsoft-git/nexcommon/model"
    "github.com/nexsoft-git/nexcommon/services"
    "github.com/nexsoft-git/nexcommon/bundles"
    "nexsoft.co.id/example/dto/in"
    userDAO "nexsoft.co.id/example/dao/user"
    wardes_profileDAO "nexsoft.co.id/example/dao/wardes_profile"
    wardes_profile_imageDAO "nexsoft.co.id/example/dao/wardes_profile_image"
)

func NewWardesProfileService(
    bundles bundles.Bundles,
    userDAO userDAO.UserDAO,
    wardes_profileDAO wardes_profileDAO.WardesProfileDAO,
    wardes_profile_imageDAO wardes_profile_imageDAO.WardesProfileImageDAO,
) WardesProfileService {

    operator := make(services.DefaultOperators)

    operator["wp.username"] = model.DefaultOperator{
        DataType: "char",
        Operator: []string{ "lk", "eq", "in" },
    }

    service := &wardes_profileService{ 
        bundles: bundles,
        userDAO: userDAO,
        wardes_profileDAO: wardes_profileDAO,
        wardes_profile_imageDAO: wardes_profile_imageDAO,
        searchOperator: operator,
    }

    return service
}

type wardes_profileService struct { 
    bundles bundles.Bundles
    userDAO userDAO.UserDAO
    wardes_profileDAO wardes_profileDAO.WardesProfileDAO
    wardes_profile_imageDAO wardes_profile_imageDAO.WardesProfileImageDAO
    searchOperator services.DefaultOperators
}

func (s *wardes_profileService) GetDTO() interface{} {
    return &in.WardesProfileDTOIn{}
}

func (s *wardes_profileService) GetMultipartDTO() interface{} {
    return nil
}

func (s *wardes_profileService) GetListScope() []string {
    return []string{ "read", "write" }
}

func (s *wardes_profileService) parseDTO(dtoIn interface{}) *in.WardesProfileDTOIn {
    return dtoIn.(*in.WardesProfileDTOIn)
}

func (s *wardes_profileService) GetListValidLimit() []int {
    return []int{ 10, 20, 30, 50, 100 }
}

func (s *wardes_profileService) GetListValidOrderBy() []string {
    return []string{ "id" }
}

func (s *wardes_profileService) GetListValidSearch() []string {
    return s.searchOperator.GetListValidSearch()
}

func (s *wardes_profileService) GetDefaultOperator() services.DefaultOperators {
    return s.searchOperator
}
***SPLIT**HERE***
***filename: wardes_profile/insert_wardes_profile.go
package wardes_profile

import (
    "github.com/nexsoft-git/nexcommon/model"
    "github.com/nexsoft-git/nexcommon/context"
    "github.com/nexsoft-git/nexcommon/services/audit_helper"
    "nexsoft.co.id/example/dto/out"
    "nexsoft.co.id/example/repository"
    out2 "github.com/nexsoft-git/nexcommon/dto/out"
    // TODO: Add other import package if necessary. Delete this line of TODO if you not adding other import package
)

func (s *wardes_profileService) InsertWardesProfile(
    ctx *context.ContextModel,
    param model.URLParam,
    dto interface{},
) (
    header map[string]string,
    output interface{},
    err error,
) {
    audit, err := s.auditHelper.InitAuditService(ctx, dto, s.doInsertWardesProfile)
	if err != nil {
		return
	}

	output, err = audit.CompletedAuditData()
	return
}

func (s *wardes_profileService) doInsertWardesProfile (
	ctx *context.ContextModel,
	tx *sql.Tx,
	dto interface{},
	timeNow time.Time,
) (
	output interface{},
	audit []audit_helper.AuditSystemModel,
	err error,
) { 

    // TODO: Implement the default function logic here
    // @Descriptions:
        /*
        - Call external API user_auth_api.PostInternalUserUpload
        - Insert data into user table using userDAO.InsertUser
        - Insert data into wardes_profile table using wardes_profileDAO.InsertWardesProfile
        - Insert data into wardes_profile_image table using wardes_profile_imageDAO.InsertWardesProfileImage*/
    // @Audit Enabled: True
    // @DTO Type: default
    // @Method Type: default

    result := //TODO: ***set the result of function here
    output = out2.DefaultResponsePayloadMessage{
		Status: out2.DefaultResponsePayloadStatus{
			Code:    "OK",
			Message: s.bundles.ReadMessageBundle("wardes_profile", "SUCCESS_INSERT_WARDES_PROFILE_MESSAGE", ctx.AuthAccessTokenModel.Locale, nil),
		},
		Data: result,
	}

	return

}

```
***List DAO : user, wardes_profile, wardes_profile_image
***List i18n : SUCCESS_INSERT_WARDES_PROFILE_MESSAGE